<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>在C++中使用format</title>
    <link href="/2023/03/31/%E5%9C%A8C-%E4%B8%AD%E4%BD%BF%E7%94%A8format/"/>
    <url>/2023/03/31/%E5%9C%A8C-%E4%B8%AD%E4%BD%BF%E7%94%A8format/</url>
    
    <content type="html"><![CDATA[<p>到目前为止，还没有编译器支持C++20的<code>format</code>模块。这个模块提供了安全、优雅和高效的文本格式化，主要以<code>std::format()</code>函数的形式出现。</p><p>那么我们想要在C++中使用<code>format</code>该怎么办呢？</p><p>我们可以使用<code>fmt</code>来实现！<code>fmt</code>是一个免费和开源的现在标准化的<code>format</code>模块的超集的实现。</p><p>下面以Mac为力介绍如何使用<code>fmt</code>.我的Mac是M1芯片，系统是Ventura 13.0.1</p><p>第一步：使用homebrew安装fmt</p><p>如果你的电脑是MacOS或Linux，强烈建议安装homebrew，安装教程可以参考 <ahref="https://brew.idayer.com/guide">Homebrew安装</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew install fmt<br></code></pre></td></tr></table></figure><p>同时也安装： <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew install pkg-config<br></code></pre></td></tr></table></figure>注：<code>pkg-config</code>是一个在编译应用程序和库时使用的辅助工具。它帮助你在命令行中插入正确的编译器选项。<code>pkg-config</code>官网：https://freedesktop.org/wiki/Software/pkg-config/</p><p>第二步：在用命令行编译C++程序时，我们需要知道fmt安装的位置。</p><p>使用<code>pkg-config</code>可以直接生成相关库的在编译时的参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">pkg-config --libs --cflags fmt<br><span class="hljs-meta prompt_"># </span><span class="language-bash">输出：-I/opt/homebrew/Cellar/fmt/9.1.0/include -L/opt/homebrew/Cellar/fmt/9.1.0/lib -lfmt</span><br></code></pre></td></tr></table></figure><p>现在就准备完毕了，写一个测试程序：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// test_format.cpp</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> FMT_HEADER_ONLY</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">#define FMT_HEADER_ONLY 建议加上这句</span><br><span class="hljs-comment">使用Mac OS自带的gcc编译器时，不加这句不会报错</span><br><span class="hljs-comment">使用自己安装的GNU的gcc编译器，不加这句会报错</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fmt/format.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>  std::cout &lt;&lt; fmt::format(<span class="hljs-string">&quot;&#123;:7&#125;|&#123;:7&#125;|&#123;:7&#125;|&#123;:7&#125;|&#123;:7&#125;\n&quot;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">-.2</span>, <span class="hljs-string">&quot;str&quot;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-literal">true</span>);<br>  std::cout &lt;&lt; fmt::format(<span class="hljs-string">&quot;&#123;:*&lt;7&#125;|&#123;:*&lt;7&#125;|&#123;:*&gt;7&#125;|&#123;:*&gt;7&#125;|&#123;:*&gt;7&#125;\n&quot;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">-.2</span>, <span class="hljs-string">&quot;str&quot;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-literal">true</span>);<br>  std::cout &lt;&lt; fmt::format(<span class="hljs-string">&quot;&#123;:^07&#125;|&#123;:^07&#125;|&#123;:^7&#125;|&#123;:^7&#125;|&#123;:^7&#125;\n&quot;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">-.2</span>, <span class="hljs-string">&quot;str&quot;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-literal">true</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>编译命令： <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">g++ -Wall -std=c++20 -I/opt/homebrew/Cellar/fmt/9.1.0/include -L/opt/homebrew/Cellar/fmt/9.1.0/lib -lfmt -o test_format test_format.cpp<br></code></pre></td></tr></table></figure></p><p>程序输入： <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">      1|   -0.2|str    |c      |true   <br>1******|-0.2***|****str|******c|***true<br>0001000|0-0.200|  str  |   c   | true <br></code></pre></td></tr></table></figure></p><p>成功了！</p><p><code>fmt</code>更多用法:</p><ul><li>官网：https://fmt.dev/latest/index.html</li><li>Cheat Sheets：https://hackingcpp.com/cpp/libs/fmt.html</li><li>Github：https://github.com/fmtlib/fmt</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>format</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LSH First Blog!</title>
    <link href="/2023/03/30/LSH-First-Blog/"/>
    <url>/2023/03/30/LSH-First-Blog/</url>
    
    <content type="html"><![CDATA[<p>这是LSH的第一篇博客！</p><p>我最喜欢的编程语言：Python <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello Python!&quot;</span>)<br></code></pre></td></tr></table></figure></p><p>我在大学阶段的主要学的内容：大气运动方程组 <spanclass="math display">\[\begin{cases}{\frac {d{\vec {V}}}{dt}}={\vec {g}}-{\frac {1}{\rho }}\nabla p-2{\vec{\Omega }}\land {\vec {V}}+{\vec {F_{\gamma }}}\\{\frac {\partial \rho}{\partial t}}+\nabla \cdot (\rho {\vec {V}})=0\\p=\rho RT\\C_{p}{\frac{dT}{dt}}-\alpha \omega ={\dot {Q}}\end{cases}\]</span></p><p>我在研究生阶段主要学的内容：机器学习（A computer program is said tolearn from experience <span class="math inline">\(E\)</span> withrespect to some class of tasks <span class="math inline">\(T\)</span>and performance measure <span class="math inline">\(P\)</span>, if itsperformance at tasks in <span class="math inline">\(T\)</span>, asmeasured by <span class="math inline">\(P\)</span>, improves withexperience <span class="math inline">\(E\)</span>）</p>]]></content>
    
    
    
    <tags>
      
      <tag>MySelf</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
